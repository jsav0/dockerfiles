#!/bin/sh

enumerate(){
	target=$1
        resolvers=dnsresolvers.txt
	[ ! -f dnsresolvers.txt ] && curl -sSL https://gist.githubusercontent.com/jsav0/8760362bb6a6542d60deedd905d67e93/raw/ea8a89446da942800c728ff8491d029ea6de4448/dnsresolvers.txt -o dnsresolvers.txt
        mkdir -p results 

        # start enumerating subdomains, passively
        # yes, a lot of these tools have overlapping sources.
        # subfinder: scrape domains from sources using custom dns resolvers w/ 100 threads
        subfinder -silent -rL $resolvers -t 100 -d $target > results/subfinder.txt

        # findomain: scrape domains from sources using custom dns resolvers w/ 100 threads
        findomain --resolvers $resolvers --threads 100 -qt $target > results/findomain.txt

        # crt.sh: scrape domains from certificate search database
        curl -s "https://crt.sh/?q=$target&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' > results/crt.txt

        # assetfinder: scrape domains from sources
        assetfinder --subs-only $target > results/assetfinder.txt

        # amass: scrape domains from sources
        amass enum -passive -norecursive -noalts -d $target -o results/amass.txt >/dev/null
}


enumerate $1 && {
	# concatenate all results, and then return only unique and valid subdomains
	cat results/* | sort -u | shuffledns -silent -r $resolvers -t 100 -d $1 | sort -u > results/subs.result && rm -f results/*.txt && cat results/subs.result
}
